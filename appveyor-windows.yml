# AppVeyor configuration for AppVeyor project "primordialmachine".
clone_depth: 1

# Build worker image (VM template).
image: Visual Studio 2022

# Build on pushes to all branches.
#branches:
#  only:
#    - main
#    - develop

# Do not build on tag pushes.
skip_tags: true

# Build platform "x64" and "Win32".
platform:
    - x64
    - Win32

# Build configurations.
configuration:
    - Release
    - Debug
    - MinSizeRel
    - RelWithDebInfo

install:
    # Enable long paths.
    - ps: Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem' -Name 'LongPathsEnabled' -Value 1
    - ps: Start-Sleep -s 10
    - ps: Restart-Computer -Force
    - ps: Start-Sleep -s 10
    # Download and install CMake.
    - set CMAKE_URL="https://cmake.org/files/v3.29/cmake-3.29.0-windows-x86_64.zip"
    - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
    - 7z x cmake.zip -oC:\projects\deps > nul
    - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
    - set PATH=C:\projects\deps\cmake\bin;%PATH%
    - cmake --version

# Generate solution and project files.
before_build:
    - ps: |
        # The name of the CMake generator, for example "Visual Studio 17 2022".
        ${env:CMAKE_GENERATOR_NAME}="";
        # The name of the CMake architecture, for example "Win32" or "x64".
        ${env:CMAKE_ARCHITECTURE_NAME}="";
        # The name of the zip file, for example "michaelheilmann.com-${env:APPVEYOR_REPO_BRANCH}-windows-x86-debug-10.1.9.zip".
        ${env:ZIP_FILENAME}="";
        # The name of the release, for example "michaelheilmann.com-${env:APPVEYOR_REPO_BRANCH}-10.1.9".
        ${env:RELEASE_NAME}="";
        
        ${env:ZIP_FILENAME}="michaelheilmann.com-${env:APPVEYOR_REPO_BRANCH}";
        ${env:ZIP_FILENAME}="${env:ZIP_FILENAME}-windows"
        
        ${env:RELEASE_NAME}="michaelheilmann.com-v$(${env:APPVEYOR_BUILD_VERSION}.ToLower())"
        
        ${env:CMAKE_ARCHITECTURE_NAME}=${env:PLATFORM}
        ${env:CMAKE_GENERATOR_NAME}="Visual Studio 17 2022"                
        
        if (${env:PLATFORM} -eq 'Win32') {
          ${env:ZIP_FILENAME}="${env:ZIP_FILENAME}-x86"
        } elseif(${env:PLATFORM} -eq 'x64') {
          ${env:ZIP_FILENAME}="${env:ZIP_FILENAME}-x64"
        } else {
          throw "unsupported platform ${env:PLATFORM}";
        }
        
        ${env:ZIP_FILENAME}="${env:ZIP_FILENAME}-$(${env:CONFIGURATION}.ToLower())-v$(${env:APPVEYOR_BUILD_VERSION}.ToLower())";
        ${env:ZIP_FILENAME}="${env:ZIP_FILENAME}.zip";
        
        Write-Host "Release Name:           ${env:RELEASE_NAME}";
        Write-Host "AppVeyor Platform:      ${env:PLATFORM}";
        Write-Host "AppVeyor Configuration: ${env:CONFIGURATION}";
        Write-Host "Zip File Name:          ${env:ZIP_FILENAME}";
        Write-Host "CMake Generator:        ${env:CMAKE_GENERATOR_NAME}"
        Write-Host "CMake Architecture:     ${env:CMAKE_ARCHITECTURE_NAME}"
    - ps: |
        Write-Host "CMake Generator: ${env:CMAKE_GENERATOR_NAME}"
        Write-Host "CMake Architecture: ${env:CMAKE_ARCHITECTURE_NAME}"
        cmake -G ${env:CMAKE_GENERATOR_NAME} -A ${env:CMAKE_ARCHITECTURE_NAME} CMakeLists.txt

build:
    parallel: true # enable MSBuild parallel builds
    project: Arcadia.sln # path to Visual Studio solution or project

after_build:
    - ps: New-Item ${env:APPVEYOR_BUILD_FOLDER}\.keepme -type file
    - ps: 7z a ${env:ZIP_FILENAME} ${env:APPVEYOR_BUILD_FOLDER}\.keepme

test_script:
    - ps: ctest --output-junit test-results-${env:APPVEYOR_JOB_ID}.xml -C ${env:CONFIGURATION} 
    - ps: |
        $webClient = New-Object 'System.Net.WebClient'
        $webClient.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test-results-${env:APPVEYOR_JOB_ID}.xml))
      
# If one matrix entry fails, all entries fails (https://www.appveyor.com/docs/build-configuration#failing-strategy).
matrix:
    fast_finish: true

artifacts:
    - path: $(ZIP_FILENAME)
      name: $(ZIP_FILENAME)

deploy:
    release: michaelheilmann.com-$(APPVEYOR_REPO_BRANCH)-v$(APPVEYOR_BUILD_VERSION)
    tag: michaelheilmann.com-$(APPVEYOR_REPO_BRANCH)-v$(APPVEYOR_BUILD_VERSION)
    description: 'michaelheilmann.com $(APPVEYOR_REPO_BRANCH) branch v$(APPVEYOR_BUILD_VERSION)'
    provider: GitHub
    auth_token:
        secure: iTg7jon0UCvoGT5y2flVxH0cFlkVZFPr9p3t4D4by8RJktpIOU08lu7K1ipChiotGYRzOrOQoUEuHja+BewAk0IQsQcXenF2tbYG837JKZz/s4xQ5GsqpD4q02BD3DIf # encrypted token from GitHub
        artifact: $(ZIP_FILENAME) # upload the artifact
    draft: true
    prerelease: false
    force_update: true
