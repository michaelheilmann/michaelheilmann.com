# AppVeyor configuration for AppVeyor project "primordialmachine".
clone_depth: 1

# Build worker image (VM template).
image: Ubuntu

# Build on pushes to all branches.
branches:
  only:
    - main
    - develop
    
environment:
  CLONE_DIRECTORY: "~/Source"
  BUILD_DIRECTORY: "~/Build"

# The clone directory.
clone_folder: '%CLONE_DIRECTORY%'

# Do not build on tag pushes.
skip_tags: true

install:
    - sh: sudo apt-get --assume-yes install libopenal-dev

# Generate solution and project files.
before_build:
    - ps: |
        # Create the build directory.
        New-Item -Path "${env:BUILD_DIRECTORY}" -ItemType Directory
        
        cd ${env:BUILD_DIRECTORY}; cmake -D"Arcadia.Visuals.OpenGl.Enabled"=TRUE -D"Arcadia.Audials.OpenAl.Enabled"=TRUE ${env:CLONE_DIRECTORY}\CMakeLists.txt
        
        ${env:RELEASE_NAME}="michaelheilmann.com-linux-$(${env:APPVEYOR_REPO_BRANCH})-v$(${env:APPVEYOR_BUILD_VERSION}.ToLower())"
        
        ${env:ARCHIVE_FILENAME}="michaelheilmann.com-${env:APPVEYOR_REPO_BRANCH}";
        ${env:ARCHIVE_FILENAME}="${env:ARCHIVE_FILENAME}-linux"
                
        ${env:ARCHIVE_FILENAME}="${env:ARCHIVE_FILENAME}-v$(${env:APPVEYOR_BUILD_VERSION}.ToLower())";
        ${env:ARCHIVE_FILENAME}="${env:ARCHIVE_FILENAME}.tar.gz";

build_script:
    - sh: make all

after_build:
    - ps: New-Item ${env:BUILD_DIRECTORY}/.keepme -type file
    - ps: tar -czvf ${env:ARCHIVE_FILENAME} ${env:BUILD_DIRECTORY}/.keepme
       
test_script:
    - ps: ctest --output-junit test-results-${env:APPVEYOR_JOB_ID}.xml 
    - ps: |
        $webClient = New-Object 'System.Net.WebClient'
        $webClient.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test-results-${env:APPVEYOR_JOB_ID}.xml))
                                          
# If one matrix entry fails, all entries fails (https://www.appveyor.com/docs/build-configuration#failing-strategy).
matrix:
    fast_finish: true

artifacts:
    - path: $(ARCHIVE_FILENAME)
      name: $(ARCHIVE_FILENAME)

deploy:
    release: $(RELEASE_NAME)
    tag: $(RELEASE_NAME)
    description: 'michaelheilmann.com $(APPVEYOR_REPO_BRANCH) branch v$(APPVEYOR_BUILD_VERSION)'
    provider: GitHub
    auth_token:
        secure: iTg7jon0UCvoGT5y2flVxKbuZIM0cCf+3cKmhb811umlbh9zHOtvJQjEqDU53XDT8/SE5zreMGYwnShZDpovMZRmpiuTdlQD9Y0hjKw1a+QBZguyWOpmttY9hv8E5FFq # encrypted token from GitHub
        artifact: $(ARCHIVE_FILENAME) # upload the artifact
    draft: true
    prerelease: false
    force_update: true
