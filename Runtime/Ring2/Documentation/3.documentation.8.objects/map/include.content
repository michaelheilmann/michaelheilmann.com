<section class="cxx entity object">
<h1 id="Arcadia_Map">Map</h1>
<p><code>Arcadia_Map</code> extends <code>Arcadia_Collection</code>.</p>
<p><code>Arcadia_Map</code> represents a map from <code>Arcadia_Value</code> objects, the keys, to <code>Arcadia_Value</code> objects, the values.</p>
</section>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<section class="cxx entity method">

  <h1 id="Arcadia_Map_create">Arcadia_Map_create</h1>

  <my-signature><code>
  Arcadia_Map*<br>
  Arcadia_Map_create<br>
  &nbsp;&nbsp;(<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Thread* thread<br>
  &nbsp;&nbsp;)
  </code></my-signature>

  <my-summary>
  Create a map.
  </my-summary>

  <section class="cxx parameters">
    <h1>Parameters</h1>
    <div>
      <div>Arcadia_Thread* thread</div>
      <div>A pointer to the <code>Arcadia_Thread</code> object.</div>
    </div>
  </section>

  <section class="cxx errors">
    <h1>Errors</h1>
    <div>
      <div>Arcadia_Status_AllocationFailed</div>
      <div>An allocation failed.</div>
    </div>
  </section>

  <section class="cxx return-value">
    <h1>Return value</h1>
    <p>A pointer to the <code>Arcadia_Map</code> object.</p>
  </section>

</section>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<section class="cxx entity method">

  <h1 id="Arcadia_Map_get">Arcadia_Map_get</h1>

  <my-signature><code>
  Arcadia_Value<br>
  Arcadia_Map_get<br>
  &nbsp;&nbsp;(<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Thread* thread,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Map* self,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value key<br>
  &nbsp;&nbsp;)
  </code></my-signature>

  <my-summary>
  <p>Get the value of an entry for a given key in this map.</p>
  <p>
  More formally:
  Let \(x\) be the specified key.
  </p>
  <ul>
      <li>If there exist an entry \(x' \mapsto y'\) in the map such that \(x\) is equivalent to \(x'\), then y' is returned.</li>
      <li>Otherwise (if there exists no such entry in the map), then a <em>Void</em> value is returned.</li>
  </ul>    
  </my-summary>

  <section class="cxx parameters">
    <h1>Parameters</h1>
    <div>
      <div>Arcadia_Thread* thread</div>
      <div>A pointer to the <code>Arcadia_Thread</code> object.</div>
    </div>
    <div>
      <div>Arcadia_Map* self</div>
      <div>A pointer to this <code>Arcadia_Map</code> object.</div>
    </div>
   <div>
      <div>Arcadia_Value key</div>
      <div>The key \(k\).</div>
    </div>
  </section>

  <section class="cxx return-value">
    <h1>Return value</h1>
    <p>The value for the given key if it was found. A <em>Void</em> value otherwise.</p>
  </section>
  
  <section class="cxx errors">
    <h1>Errors</h1>
    <div>
      <div>Arcadia_Status_ArgumentTypeInvalid</div>
      <div><code>key</code> is a <em>Void</em> value.</div>
    </div>
  </section>

</section>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<section class="cxx entity method">

  <h1 id="Arcadia_Map_remove">Arcadia_Map_remove</h1>

  <my-signature><code>
  Arcadia_Value<br>
  Arcadia_Map_set
  &nbsp;&nbsp;(<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Thread* thread,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Stack* self,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value key<br>
  &nbsp;&nbsp;)
  </code></my-signature>

  <my-summary>
  <p>
  Remove an entry for a given key from this map.
  </p>
  <p>
  More formally:
  Let \(x\) be the specified key and \(y\) be the specified value.
  </p>
  <ul>
    <li>If \(y\) is an <em>Void</em> value then there are two cases:
      <ul>
      <li>If there exist an entry \((x' \mapsto y')\) in the map such that \(x\) is equivalent to \(x'\), then this entry is removed and y' is returned.</li>
      <li>Otherwise (if there exists no such entry in the map), then a <em>Void</em> value is returned.</li>
    </li>
    <li>Otherwise (\(y\) is not an <em>Void</em> value) then there are two cases:
      <li>If there exist one \((x' \mapsto y')\) in the map such that \(x\) is equivalent to \(x'\), then this entry is replaced by the entry \((x' \mapsto y)\) and y' is returned.</li>
      <li>Otherwise the entry \((x \mapsto y)\) is added and an <em>Void</em> value is returned.</li>      
    </li>
  </ul>       
  </my-summary>

  <section class="cxx parameters">
    <h1>Parameters</h1>
    <div>
      <div>Arcadia_Thread* thread</div>
      <div>A pointer to the <code>Arcadia_Thread</code> object.</div>
    </div>
    <div>
      <div>Arcadia_Map* self</div>
      <div>A pointer to this stack.</div>
    </div>
    <div>
      <div>Arcadia_Value key</div>
      <div>The key \(x\).</div>
    </div>
    <div>
      <div>Arcadia_Value value</div>
      <div>The value \(y\).</div>
    </div>
  </section>

  <section class="cxx return-value">
    <h1>Return value</h1>
    <p>The value of the removed entry \((x \mapsto y)\) such an entry was found. A <em>Void</em> value otherwise.</p>
  </section>
  
  <section class="cxx errors">
    <h1>Errors</h1>
    <div>
      <div>Arcadia_Status_ArgumentTypeInvalid</div>
      <div><code>key</code> is a <em>Void</em> value.</div>
    </div>
  </section>

</section>


<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<section class="cxx entity method">

  <h1 id="Arcadia_Map_set">Arcadia_Map_set</h1>

  <my-signature><code>
  void<br>
  Arcadia_Map_set
  &nbsp;&nbsp;(<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Thread* thread,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Stack* self,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value key,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value value<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value* oldKey,<br>
  &nbsp;&nbsp;&nbsp;&nbsp;Arcadia_Value* oldValue,<br>
  &nbsp;&nbsp;)
  </code></my-signature>

  <my-summary>
  <p>
  Set the value for the given key in this map.
  </p>
  <p>
  More formally:
  Let \(x\) be the specified key and \(y\) be the specified value.
  </p>
  <ul>
    <li>If \(x\) is an <em>Void</em> value, then an <em>Argument Type Invalid</em> error is raised.</li>
    <li>If \(y\) is an <em>Void</em> value then there are two cases:
      <ul>
      <li>
      If there exist an entry \((x' \mapsto y')\) in the map such that \(x\) is equivalent to \(x'\), then this entry is removed.
      \(x'\) is returned in <code>*oldKey</code> if oldKey is not null.
      \(y'\) is returned in <code>*oldValue</code> if oldValue is not null.
      </li>
      <li>
      Otherwise (if there exists no such entry in the map):
      <em>Void</em> value is returned in <code>*oldKey</code> if oldKey is not null.
      <em>Void</em> value is returned in <code>*oldValue</code> if oldValue is not null.
      </li>
    </li>
    <li>Otherwise (\(y\) is not an <em>Void</em> value) then there are two cases:
      <li>
      If there exist one \(x' \mapsto y'\) in the map such that \(x\) is equivalent to \(x'\), then this entry is replaced by the entry \(x \mapsto y\).
      \(x'\) is returned in <code>*oldKey</code> if oldKey is not null.
      \(y'\) is returned in <code>*oldValue</code> if oldValue is not null.  
      </li>
      <li>
      Otherwise the entry \(x \mapsto y\) is added.
      <em>Void</em> value is returned in <code>*oldKey</code> if oldKey is not null.
      <em>Void</em> value is returned in <code>*oldValue</code> if oldValue is not null.
      </li>      
    </li>
  </ul>       
  </my-summary>

  <section class="cxx parameters">
    <h1>Parameters</h1>
    <div>
      <div>Arcadia_Thread* thread</div>
      <div>A pointer to the <code>Arcadia_Thread</code> object.</div>
    </div>
    <div>
      <div>Arcadia_Map* self</div>
      <div>A pointer to this stack.</div>
    </div>
    <div>
      <div>Arcadia_Value key</div>
      <div>The key \(k\).</div>
    </div>
    <div>
      <div>Arcadia_Value value</div>
      <div>The value \(v\).</div>
    </div>
  </section>

  <section class="cxx return-value">
    <h1>Return value</h1>
    <p>The value of the removed entry \((x' \mapsto y')\) if an entry for the given key if it was found. A <em>Void</em> value otherwise.</p>
  </section>
  
  <section class="cxx errors">
    <h1>Errors</h1>
    <div>
      <div>Arcadia_Status_ArgumentTypeInvalid</div>
      <div><code>key</code> is a <em>Void</em> value.</div>
    </div>
  </section>

</section>
